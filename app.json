{
  "name": "Keratin AuthN",
  "description": "Authentication service that keeps you in control of the experience without forcing you to be an expert in web security.",
  "website": "https://github.com/keratin/authn",
  "logo": "https://avatars3.githubusercontent.com/u/23507480?v=3&s=200",
  "env": {
    "AUTHN_URL": {
      "description": "The full URL for this AuthN service",
      "value": "http://YOURAPPNAME.herokuapp.com"
    },
    "APP_DOMAINS": {
      "description": "A comma-delimited list of domains that integrate with this AuthN service",
      "value": "yourapp.somewhere"
    },
    "HTTP_AUTH_USERNAME": {
      "description": "The HTTP Basic Auth username your application will send for secured back-channel communications.",
      "value": ""
    },
    "HTTP_AUTH_PASSWORD": {
      "description": "The HTTP Basic Auth password your application will send for secured back-channel communications.",
      "value": ""
    },
    "RSA_PUBLIC_KEY": {
      "description": "",
      "value": "run `ssh-keygen -N '' -f keratin-authn-rsa`, then paste the entire output of `cat keratin-authn-rsa.pub` into here"
    },
    "RSA_PRIVATE_KEY": {
      "description": "",
      "value": "paste the output of `cat keratin-authn-rsa` after running the ssh-keygen command above"
    },
    "APP_PASSWORD_RESET_URL": {
      "description": "A back-channel endpoint where AuthN can send password reset tokens for email delivery.",
      "value": "https://username:password@yourapp.somewhere/keratin/password_reset",
      "required": false
    },
    "SECRET_KEY_BASE": {
      "description": "Key used to securely sign AuthN session cookies",
      "generator": "secret"
    },
    "BUNDLE_WITHOUT": {
      "description": "Disable SQLite3 and MySQL drivers for Heroku install",
      "value": "development:test:sqlite3:mysql"
    }
  },
  "addons": [
    "heroku-postgresql:hobby-dev",
    "heroku-redis:hobby-dev"
  ],
  "buildpacks": [
    {
      "url": "heroku/ruby"
    }
  ]
}
